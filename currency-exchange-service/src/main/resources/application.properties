spring.application.name=currency-exchange
server.port=8000
spring.config.import=optional:configserver:http://localhost:8888

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
#spring.h2.console.enabled=true 
 
#in newer version of spring boot sql statment execute before ctable creation to prevet this need to write below line
spring.jpa.defer-datasource-initialization=true

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka


#this configuration for maximum attempts we want to retry(this is use when service tempraryly down,just give service little bit of time then call again)
#resilience4j.retry.instances.sample-api.max-retry-attempts=5
resilience4j.retry.instances.sample-api.maxAttempts=5 
#this is for time interval between each attempts
resilience4j.retry.instances.sample-api.wait-duration=1s
#response take littlebit more time bcoz each subsequent request it would take little longer and longer
# that means time is exponentialy increase for each attempt
#this is call exponential backoff.
resilience4j.retry.instances.sample-api.enable-exponential-backoff=true


#resilience4j.circuitbreaker.instances.default.failure-rate-threshold=50

resilience4j.ratelimiter.instances.default.limit-for-period=2
resilience4j.ratelimiter.instances.default.limit-refresh-period=10s

#configuration for buldhead feature of circuitbreaker framework
#resilience4j.bulkhead.instances.defailt.max-concurrent-calls=10
resilience4j.bulkhead.instances.sample-api.max-concurrent-calls=10
